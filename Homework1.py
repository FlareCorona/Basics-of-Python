# # 1. Поработайте с переменными, создайте несколько, выведите на экран, запросите у пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.

print(7 + 100)

print(6 * 2, (11 - 1) * 5)

print(3 ** 14)

print(56 / 9)

print(40 // 7)

print(40 % 7)

a = 14
b = 100
c = 12

print(a > b) or print(a > c)

a = float(40 / 7)
print(a)

print(True and False)
print(True or False)

print(6 != 6)

print(15 in [5, 10, 20, 15, 30])

number = input("Введите Ваше любимое число: ")

a = int(input("Введите целое число: "))

a = list('24101')
print(a)

a = tuple('22.4 Hello')
print(a)

sheet_music = 'F'
if sheet_music == 'D':
    print('Ре')
elif sheet_music == 'A':
    print('Ля')
elif sheet_music == 'H':
    print('Си')
elif sheet_music == 'E':
    print('Ми')
elif sheet_music == 'G':
    print('Соль')
elif sheet_music == 'C':
    print('До')
else: print('неизвестная нота')

# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс. Используйте форматирование строк.

seconds = int(input("Введите время в секундах: "))
if seconds < 60:
    print(f'00:00:{seconds:02}')
elif seconds < 3600:
    print(f'00:{seconds // 60:02}:{seconds % 60:02}')
else:
    print(f'{seconds // 3600:02}:{(seconds % 3600)// 60:02}:{seconds % 60:02}')

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

num = input("Введите любое целое число: ")
sum_num = int(num) + int(num * 2) + int(num * 3)
print(f'Итоговая сумма: {sum_num}')

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.

n = int(input("Введите любое целое число: "))
min = 0
while n > 0:
    if n % 10 > min:
        min = n % 10
        if min == 9:
            break
    n = n // 10
print(f'Наибольшая цифра числа: {min}')

# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма
# (прибыль — выручка больше издержек, или убыток — издержки больше выручки).
# Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.

earning = int(input('Выручка: '))
costs = int(input('Издержки: '))
if costs > earning:
    print('Убыток')
elif earning == costs:
    print('Финансовый результат = 0')
elif earning > costs:
    print('Прибыль')
    profitability = round((earning - costs) / earning, 2)
    print(f'Рентабильность: {profitability}')
    empl_count = int(input('Количество сотрудников: '))
    profit_for_empl = round((earning - costs) / empl_count, 2)
    print(f'Прибыль фирмы в расчете на одного сотрудника: {profit_for_empl}')

# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров. Программа должна принимать значения параметров a и b и выводить
# одно натуральное число — номер дня.
# Например: a = 2, b = 3.

a = float(input("Enter start: "))
b = float(input("Enter finish: "))
day = 1
if a > b:
    print(day)
while a < b:
    a = a + a / 10
    day += 1
print(day)
# или

distance = float(input('Дистанция в 1 день: '))
goal = float(input('Цель: '))
days = 1
while distance < goal:
    distance *= 1.1
    days += 1
print(f'Требуемое количествово дней - {days}')